# nginx.conf complet (pas d'include conf.d)
events {}

http {
  server {
    listen ${PORT};
    server_name _;

    # Health check Render
    location = /healthz { return 200; }

    # Dust POST sur "/" → route vers /mcp amont
    location = / {
      if ($request_method = POST) {
        proxy_pass http://127.0.0.1:9090/mcp;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header Connection "";
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
        break;
      }
      # GET / (navigateur) → message lisible (évite les 502)
      return 200 "MCP Airtable is live. Clients should POST / (mapped to /mcp) or use /mcp, /messages, /sse, /airtable/.\n";
      add_header Content-Type text/plain;
    }

    # Endpoints explicites (tests manuels)
    location = /mcp {
      proxy_pass http://127.0.0.1:9090/airtable/mcp;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Connection "";
      proxy_read_timeout 300s;
      proxy_send_timeout 300s;
    }

    location = /messages {
      proxy_pass http://127.0.0.1:9090/airtable/messages;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Connection "";
      proxy_read_timeout 300s;
      proxy_send_timeout 300s;
    }

    location = /sse {
      proxy_pass http://127.0.0.1:9090/airtable/sse;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Connection "";
      proxy_read_timeout 300s;
      proxy_send_timeout 300s;
    }

    location /airtable/ {
      proxy_pass http://127.0.0.1:9090/airtable/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Connection "";
      proxy_read_timeout 300s;
      proxy_send_timeout 300s;
    }
  }
}
